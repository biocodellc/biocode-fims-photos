apply plugin: "java"
apply plugin: "idea"

targetCompatibility = 1.8
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

//noinspection GroovyAssignabilityCheck
configurations {
    server
    testCompile.extendsFrom server
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime
}

idea {
    module {
        scopes.COMPILE.plus += [configurations.server]
    }
}

//noinspection GroovyAssignabilityCheck
sourceSets {
    main {
        compileClasspath += [configurations.server]
    }
    test {
        compileClasspath += [configurations.server]
        runtimeClasspath += [configurations.server]
    }
    integrationTest {
        compileClasspath += main.output + test.output
        runtimeClasspath += main.output + test.output
        java.srcDir file('src/integration-test/java')
        resources.srcDir file('src/integration-test/resources')
    }
}

dependencies {
    server 'commons-lang:commons-lang:2.6'
    server group: 'org.imgscalr', name: 'imgscalr-lib', version: '4.2'
    server group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.8.4'
    server 'org.slf4j:slf4j-log4j12:1.7.19'

    compile project(":biocode-fims-commons")

    testCompile "junit:junit-dep:4.10"
    testCompile 'org.mockito:mockito-all:1.9.5'

    integrationTestCompile project(path:":biocode-fims-commons", configuration:"integrationTestOutput")
//    integrationTestCompile project(path:":biocode-fims-commons", configuration:"integrationTestCompile")
//    integrationTestRuntime project(path:":biocode-fims-commons", configuration:"integrationTestRuntime")
}

task integrationTest(type: Test) {
    testClassesDir = sourceSets.integrationTest.output.classesDir
    classpath = sourceSets.integrationTest.runtimeClasspath
    outputs.upToDateWhen { false }
}

check.dependsOn integrationTest
integrationTest.mustRunAfter test

tasks.withType(Test) {
    reports.html.destination = file("${reporting.baseDir}/${name}")
}
